<?php
/**
 * Created by PhpStorm.
 * User: user
 * Date: 19-1-12
 * Time: 下午10:09
 */

namespace app\index\controller;


use think\Controller;
use think\Session;

class Reserve extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if(session('account')==null){
            $this->error('no login','index/login');
        }
    }
    public function user_reserve(){
        $flightID=$_POST['flightID'];
        $flightProductID=$_POST['flightProductID'];
//        dump($_POST);
        $arr = Session::get('allExFlightAndProduct');
        $rsvData=null;
        foreach ((array)$arr as $key=>$value){
            if($value['flightID']==$flightID && $value['flightProductID']==$flightProductID){
                $rsvData=$value;
                break;
            }
        }
        Session::set('rsvData',$rsvData);
        return $this->fetch('index/user_reserve');
    }
    public function user_payment(){
        if(Session::has('passenger')==false){
            $this->error("no passenger",'index/user_reserve');
        }
        $passenger=Session::get('passenger');
        $rsvData=Session::get('rsvData');
        $param = Session::get('account');
        $customer=model('Customer')->getByAccount($param);
        $payment=$_POST['payment'];
        $account=$customer['account'];
        $pointPrice=$rsvData['pointPrice'];
        $flightProductID=$rsvData['flightProductID'];
        $passengerNum=count($passenger);
        $leftTicketNum=$rsvData['leftTicketNum'];
        $insurancePrice=$rsvData['insurancePrice'];
        $rewardPoint=$passengerNum*$rsvData['rewardPoint'];
        if($payment=='false' && $customer['point'] < $pointPrice* $passengerNum) {
            Session::delete('rsvData');
            Session::delete('allExFlightAndProduct');
            Session::delete('passenger');
            return $this->error("point not enough","index/user_index");
        }
        else if($leftTicketNum < $passengerNum ) {
            Session::delete('rsvData');
            Session::delete('allExFlightAndProduct');
            Session::delete('passenger');
            return $this->error("ticket not enough","index/user_index");
        }
        else{
            $orderList=model('OrderList');
            $orderID=$orderList->getLastID($account)+1;
            $time=date("Y-m-d h:i:s");
            $orderList->add($account,$orderID,$time);

            $flightID=$rsvData['flightID'];
            $exFlightDate=$rsvData['exFlightDate'];
            $paymentWay=null;
            if($payment=='false') {
                $price=$pointPrice;
                $paymentWay=0;
            }else{
                $price=$rsvData['price'];
                $paymentWay=1;
            }
            $ticket=model('Ticket');
            foreach($passenger as $value){
                $ticketID='731-';
                $ticketID.=mt_rand(10000000,99999999);$ticketID.='-';
                $ticketID.=mt_rand(100,999);
                if($value['insurance']==false){
                    $ticket->add($account,$orderID,$ticketID,$flightID,$exFlightDate,$flightProductID,
                        $value['passengerName'],$value['passengerTel'],$value['passengerIDCard'],0,
                        $paymentWay,$price,$value['passengerSex']);
                }else{
                    $ticket->add($account,$orderID,$ticketID,$flightID,$exFlightDate,$flightProductID,
                        $value['passengerName'],$value['passengerTel'],$value['passengerIDCard'],$insurancePrice,
                        $paymentWay,$price,$value['passengerSex']);
                }
            }
        }
        $point=$customer['point'];
        $customerModel=model('Customer');
        if($payment=='false') {
            $point=$point-$pointPrice*count($passenger);
        }

        $point+=$rewardPoint;
        $customerModel->updatePoint($account,$point);

        $customer=$customerModel->getByAccount($param);
        Session::set('customer',$customer);

        model('ExFlight')->updateTicketNum($leftTicketNum-$passengerNum,$flightID,$flightProductID,$exFlightDate);
        Session::delete('rsvData');
        Session::delete('allExFlightAndProduct');
        Session::delete('passenger');
        return $this->success("thanks for consumption","index/user_index");
    }
    public function passenger_add(){
        $passengerName=$_POST['passengerName'];
        $passengerIDCard=$_POST['passengerIDCard'];
        $passengerTel=$_POST['passengerTel'];
        if($_POST['passengerSex']=='female'){
            $passengerSex=false;
        }else{
            $passengerSex=true;
        }
        if(isset($_POST['insurance']) ){
            $insurance=true;
        }else{
            $insurance=false;
        }
        $arr = array("passengerName"=>$passengerName,"passengerIDCard"=>$passengerIDCard,
            "passengerTel"=>$passengerTel,"passengerSex"=>$passengerSex,"insurance"=>$insurance);
        if(Session::has('passenger')==false ){
            $passenger[]=$arr;
        }else{
            $passenger=Session::get('passenger');
            array_push($passenger,$arr);
        }
        Session::set('passenger',$passenger);
        return $this->fetch('index/user_reserve');
    }
}